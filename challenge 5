// Define the custom exception
class NoSeatsAvailableException extends Exception {
    public NoSeatsAvailableException(String message) {
        super(message);
    }
}

public class FlightBookingSystem {
    private static int availableSeats = 5; // Example initial available seats
//Pascua Gabriel P.
//CITCS 1B groupB
    public static void main(String[] args) {
        java.util.Scanner scanner = new java.util.Scanner(System.in);

        System.out.println("Welcome to the Flight Booking System!");
        while (availableSeats > 0) {
            System.out.print("Enter the number of seats you want to book: ");
            
            try {
                int seatsToBook = scanner.nextInt();
                bookSeats(seatsToBook);
                System.out.println("Booking successful! Seats booked: " + seatsToBook);
                System.out.println("Remaining seats: " + availableSeats);
            } catch (NoSeatsAvailableException e) {
                System.out.println("Error: " + e.getMessage());
                break;
            } catch (java.util.InputMismatchException e) {
                System.out.println("Error: Please enter a valid number.");
                scanner.next(); // Clear invalid input
            }
        }

        System.out.println("Thank you for using the Flight Booking System!");
        scanner.close();
    }

    private static void bookSeats(int seatsToBook) throws NoSeatsAvailableException {
        if (seatsToBook > availableSeats) {
            throw new NoSeatsAvailableException("Not enough seats available. Only " + availableSeats + " seats left.");
        } else if (seatsToBook <= 0) {
            throw new NoSeatsAvailableException("You must book at least one seat.");
        } else {
            availableSeats -= seatsToBook;
        }
    }
}





//Pascua Gabriel P.
//CITCS 1B groupB
// Custom exception class
class InsufficientFundsException extends Exception {
    public InsufficientFundsException(String message) {
        super(message);
    }
}

// BankAccount class
class BankAccount {
    private double balance;

    // Constructor
    public BankAccount(double initialBalance) {
        if (initialBalance < 0) {
            throw new IllegalArgumentException("Initial balance cannot be negative.");
        }
        this.balance = initialBalance;
    }

    // Method to get balance
    public double getBalance() {
        return balance;
    }

    // Method to withdraw money
    public void withdraw(double amount) throws InsufficientFundsException {
        if (amount <= 0) {
            throw new IllegalArgumentException("Withdrawal amount must be greater than zero.");
        }
        if (amount > balance) {
            throw new InsufficientFundsException("Insufficient funds. You tried to withdraw " + amount +
                                                 " but only " + balance + " is available.");
        }
        balance -= amount;
        System.out.println("Withdrawal successful. Remaining balance: " + balance);
    }
}

// Main class

public class BankingSystem {
    public static void main(String[] args) {
        // Create a BankAccount with an initial balance
        BankAccount account = new BankAccount(5000); // Example: Initial balance = 5000

        System.out.println("Current balance: " + account.getBalance());

        // Attempt withdrawals
        try {
            account.withdraw(2000); // Successful withdrawal
            account.withdraw(3500); // Will throw InsufficientFundsException
        } catch (InsufficientFundsException e) {
            System.err.println("Error: " + e.getMessage());
        }
    }
}
